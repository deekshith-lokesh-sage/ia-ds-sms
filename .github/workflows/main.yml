name: 'JFrog CI Integration'
on: 
  push:
    branches:
      - main
      
jobs:
 jfrog-ci-integration:
   runs-on: ubuntu-latest
   env:
     JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_SERVER_1 }}
     JFROG_BUILD_STATUS: PASS
   steps:
     - name: Checkout
       uses: actions/checkout@v2
     - name: Setup JFrog CLI
       uses: jfrog/setup-jfrog-cli@v2.0.0
       env:
         JF_ARTIFACTORY_SERVER: ${{ secrets.JF_ARTIFACTORY_SERVER_1 }}
     - name: Set up JDK 11
       uses: actions/setup-java@v2
       with:
         java-version: '11'
         distribution: 'adopt'
     - name: Run Maven build
       run: |
         # Init JFrog CLI Maven config
         MVN_PATH=`which mvn` && export M2_HOME=`readlink -f $MVN_PATH | xargs dirname | xargs dirname`
         # Replace ‘my_art_server’ with your imported server
         jfrog rt mvn-config --server-id-resolve=intacct --repo-resolve-releases=ia-release --repo-resolve-snapshots=ia-snapshot
         # Build the maven project
         jfrog rt mvn clean install
         # Do we really need to create and upload release jar?  Because final product is helm chart
         # jfrog rt mvn release:prepare
         # jfrog rt mvn release:perform
     - name: Failure check
       run: |
         echo "JFROG_BUILD_STATUS=FAIL" >> $GITHUB_ENV
       if: failure()
     - name: Publish Maven build
       run: |
         # Collect environment variables for the build
         jfrog rt bce
         # Collect VCS details from git and add them to the build
         jfrog rt bag
         # Publish build info
         jfrog rt bp
         # Scan build
         jfrog rt bs
         # upload helm chart (we will need to uncomment it)
         jfrog rt u "*.tgz" ia-helm 
       if: always()
